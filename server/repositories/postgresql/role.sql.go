// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: role.sql

package postgresql

import (
	"context"
)

const findRoles = `-- name: FindRoles :many
SELECT
    id,
    name
FROM
    roles
WHERE
    id != 'superadmin'
`

type FindRolesRow struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

func (q *Queries) FindRoles(ctx context.Context) ([]FindRolesRow, error) {
	rows, err := q.db.Query(ctx, findRoles)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []FindRolesRow{}
	for rows.Next() {
		var i FindRolesRow
		if err := rows.Scan(&i.ID, &i.Name); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
